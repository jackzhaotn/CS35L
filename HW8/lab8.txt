Laboratory: Managing a backported change

1. Get a copy of diffutils in git format
   $ git clone ~eggert/src/gnu/diffutils

2. Get change log
   $ cd diffutils
   $ git log > git-log.txt

3. Generate list of tags for Diffutils
   $ git tag > git-tags.txt

4. Find the commit and generate a patch
   $ emacs git-log.txt
   C-S maint:quote
   I find that the commit is: 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f
   Now to generate the patch:
   $ git format-patch -1 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f --stdout >
     quote-patch.txt

5. Check out version 3.0
   $ git checkout v3.0
   OUTPUT: ... HEAD is now at 022cd5c version 3.0

6. Patch to v3.0
   $ patch -p1 < quote-patch.txt
   Skipped a file files to patch.
   Failed hunks:
   README: 9, 60
   README-hacking: 19
   cfg.mk: 29
   src/diff.c: 876, 906, 942
   src/diff3.c: 433

   Can't find file:
   doc/diagmeet.note: line 249

7. Get an overview of what happened
   $ git status
   
   HEAD detached at v3.0
   Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   NEWS
	modified:   README
	modified:   TODO
	modified:   doc/diagmeet.note
	modified:   ms/config.bat
	modified:   ms/config.site
	modified:   po/en.po
	modified:   src/analyze.c
	modified:   src/cmp.c
	modified:   src/context.c
	modified:   src/diff.c
	modified:   src/diff.h
	modified:   src/diff3.c
	modified:   src/dir.c
	modified:   src/ifdef.c
	modified:   src/io.c
	modified:   src/sdiff.c
	modified:   src/side.c
	modified:   src/system.h
	modified:   src/util.c
	modified:   tests/help-version

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	NEWS.orig
	README-hacking.orig
	README-hacking.rej
	README.orig
	README.rej
	cfg.mk.orig
	cfg.mk.rej
	git-log.txt
	git-tags.txt
	ms/config.site.orig
	quote-patch.txt
	src/cmp.c.orig
	src/context.c.orig
	src/diff.c.orig
	src/diff.c.rej
	src/diff.h.orig
	src/diff3.c.orig
	src/diff3.c.rej
	src/dir.c.orig
	src/sdiff.c.orig
	src/system.h.orig
	src/util.c.orig
	tests/help-version.orig

no changes added to commit (use "git add" and/or "git commit -a")

8. Learn new emacs commands: vc-diff, vc-revert, describe-mode, diff-apply-hunk
   , diff-goto-source

9. Revert changes to non .c files
   Files to change ("from changes not staged for commit" section):
   	 NEWS, README, TODO, doc/diagmeet.note,
	 ms/config.bat, ms/config.site, po/en.po, src/diff.h, src/system.h,
	 and tests/help-version
   $ emacs FILE
   C-x v u
   yes
   C-x C-c

   Undo all the hunks in .c files that change documentation/comments
   $ emacs FILE
   C-x v =
   C-u C-c C-a
   C-x C-c
   y

10. Look for rejected patches and manually patch them unless they are in
    comments
    $ ls src/*.c.rej
    src/diff3.c.rej	src/diff.c.rej

    $ emacs src/*.c.rej
    C-s `
    $ emacs src/*.c
    M-g g (line number)
    *manually change the ` to '
    C-x C-s
    C-x C-c

11. Remove untracked files with:
    $ git clean -f

12. Verify that git status contains "half a dozen" files
    $ git status
    	modified:   src/cmp.c
	modified:   src/diff.c
	modified:   src/diff3.c
	modified:   src/dir.c
	modified:   src/sdiff.c
	modified:   src/util.c
    There are indeed 6 files

    Now verify number patch lines
    $ git diff > quote-3.0-patch.txt
    $ wc -l quote-3.0-patch.txt
    326: verified.

13. I will read README-hacking to learn about how to proceed. Also on lnxsrv03
    so I dont have to worry about anything after ./bootstrap
    $ emacs README-hacking

    $ ./bootstrap
    $ ./configure
    $ make
    $ make check

    Now to verify:
    $ ./src/diff . -
    ./src/diff: cannot compare '-' to a directory (VERIFIED)
    $ ./src/diff --help
    ...
    VERIFIED

14. Sanity check
    Make a directory for the original source code for 3.0
    $ cd ..
    $ git clone ~eggert/src/gnu/diffutils diffutils-3.0
    $ cd diffutils-3.0
    $ git checkout v3.0
    Copy our modified version of source into diffutils-3.0-patch
    $ cd ..
    $ mkdir diffutils-3.0-patch
    $ cp ./diffutils/src/*.c ./diffutils-3.0-patch/

    Compare these two directories
    $ ./diffutils/src/diff -pru diffutils-3.0/src diffutils-3.0-patch >
      quote-3.0-test.txt

15. Now use diff to compare quote-3.0-test and quote-3.0-patch.txt
    $ diff -u quote-3.0-test.txt quote-3.0-patch.txt
    The output is very long, but we can see that most of the differences are
    in different file paths or the grave differientation.